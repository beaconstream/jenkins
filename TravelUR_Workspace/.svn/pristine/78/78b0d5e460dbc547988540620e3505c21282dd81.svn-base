package com.travelur.travelconnect.vacationpackages;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.travelur.R;
import com.travelur.backend.VolleyRequest;
import com.travelur.general.BaseFragment;
import com.travelur.travelconnect.settings.Setting;
import com.travelur.utility.AppConfig;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * @author by Abhijit.
 */

public class SendEnquiry extends BaseFragment implements View.OnClickListener {

    private static final int MY_PERMISSIONS_REQUEST_CALL_PHONE = 1;
    TextView phone, cancel;
    ImageView close;
    EditText your_name, emai_id, mob_no, message;
    Spinner no_of_person;
    Button update;
    Intent surf;
    private JSONObject jsonObject;

    String firstName, email, phone_text, message_text;

    public static SendEnquiry newInstance() {
        SendEnquiry fragment = new SendEnquiry();
        return fragment;
    }
    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.vactionpackage_moredetails_sendenquiry, null, false);
        return v;
    }

    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        phone = (TextView)view.findViewById(R.id.phone);
        close = (ImageView) view.findViewById(R.id.close);
        cancel = (TextView)view.findViewById(R.id.cancel);
        your_name = (EditText) view.findViewById(R.id.your_name);
        emai_id = (EditText) view.findViewById(R.id.email_id);
        mob_no = (EditText) view.findViewById(R.id.mobile_no);
        message = (EditText) view.findViewById(R.id.message);
        update = (Button) view.findViewById(R.id.update);

        update.setOnClickListener(this);
        phone.setTypeface(font);
        phone.setOnClickListener(this);
        close.setOnClickListener(this);
        cancel.setOnClickListener(this);
        String number = "18008436411";
        Uri call = Uri.parse("tel:" + number);
        surf = new Intent(Intent.ACTION_CALL, call);

    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.close:
                if (getFragmentManager().getBackStackEntryCount() > 0) {
                    getFragmentManager().popBackStack();
                }
                break;
            case R.id.cancel:
                if (getFragmentManager().getBackStackEntryCount() > 0) {
                    getFragmentManager().popBackStack();
                }
                break;
            case R.id.your_name:
                break;
            case R.id.email_id:
                break;
            case R.id.mobile_no:
                break;
            case R.id.message:
                break;
            case R.id.phone:

                if (ContextCompat.checkSelfPermission(getContext(),
                        Manifest.permission.CALL_PHONE)
                        != PackageManager.PERMISSION_GRANTED) {

                    requestPermissions(
                            new String[]{Manifest.permission.CALL_PHONE},
                            MY_PERMISSIONS_REQUEST_CALL_PHONE);

                    // MY_PERMISSIONS_REQUEST_CALL_PHONE is an
                    // app-defined int constant. The callback method gets the
                    // result of the request.
                } else {
                    //You already have permission
                    try {
                        startActivity(surf);
                    } catch(SecurityException e) {
                        e.printStackTrace();
                    }
                }
                break;
            case R.id.update:
                if(your_name.getText().length()>0 && emai_id.getText().length()>0 && phone.getText().length()>0 && message.getText().length()>0)
                {
                    firstName = your_name.getText().toString();
                    email = emai_id.getText().toString();
                    phone_text = phone.getText().toString();
                    message_text = message.getText().toString();
                    sendQuery();
                }else{
                    Toast.makeText(getContext(),"Please fill the form completely!", Toast.LENGTH_SHORT).show();
                }
                break;
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode,
                                           String permissions[], int[] grantResults) {
        switch (requestCode) {
            case MY_PERMISSIONS_REQUEST_CALL_PHONE: {
                // If request is cancelled, the result arrays are empty.
                if (grantResults.length > 0
                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {

                    // permission was granted, yay! Do the phone call
                    startActivity(surf);
                } else {

                    // permission denied, boo! Disable the
                    // functionality that depends on this permission.
                    Toast.makeText(getContext(), "No permission", Toast.LENGTH_SHORT).show();
                }
                return;
            }

            // other 'case' lines to check for other
            // permissions this app might request
        }
    }

    private void sendQuery()
    {
        jsonObject = new JSONObject();
        try {
            if(null!= AppConfig.getUser_id())
            {
                jsonObject.put("package_id", AppConfig.vacation_package_seletedppackege);
                jsonObject.put("first_name", firstName);
                jsonObject.put("email", email);
                jsonObject.put("phone", phone_text);
                jsonObject.put("message", message_text);
                VolleyRequest volleyRequest = new VolleyRequest(getContext());
                volleyRequest.vacation_package_moreDetails_sendEnquiry(jsonObject);
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
}
